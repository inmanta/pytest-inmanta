/*
 * Test the pytest-inmanta version used by the ISO3 product (pytest-inmanta<1.5.0) against
 * the corresponding inmanta-core version.
 */
 pipeline {
    agent any
    triggers {
        cron(BRANCH_NAME == "master" ? "H H(2-5) * * *": "")
     }

    environment {
        REPO_NAME="pytest-inmanta"
        PIP_INDEX_URL="https://artifacts.internal.inmanta.com/inmanta/dev"
        PIP_PRE="true"
    }

    options {
        disableConcurrentBuilds()
        checkoutToSubdirectory(env.REPO_NAME)
        skipDefaultCheckout()
        buildDiscarder(logRotator(numToKeepStr: '30'))
    }

    stages {
        stage("Setup") {
          steps {
            deleteDir()
            dir(env.REPO_NAME) {
              checkout scm
              script {
                sh '''
                  rm -rf ${WORKSPACE}/env
                  python3 -m venv ${WORKSPACE}/env
                  ${WORKSPACE}/env/bin/python3 -m pip install -U setuptools pip

                  # Versions used by ISO3
                  ${WORKSPACE}/env/bin/python3 -m pip install -U "pytest-inmanta<1.5.0" "inmanta~=2020.4.7"
                '''
              }
            }
          }
        }

        stage("Run tests") {
          steps {
            dir(env.REPO_NAME) {
              sh '''
                ${WORKSPACE}/env/bin/python3 -m pytest --junitxml=junit.xml --log-cli-level DEBUG -s -vvv tests --basetemp=${WORKSPACE}/tmp
              '''
            }
          }
        }

        stage("code linting") {
          steps{
            dir(env.REPO_NAME) {
              sh'''
                ${WORKSPACE}/env/bin/flake8 examples pytest_inmanta tests
              '''
            }
          }
        }
    }

    post {
      always {
        junit "${env.REPO_NAME}/junit.xml"
      }
    }
}
